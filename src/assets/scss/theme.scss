@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://www.google.com/design/spec/style/color.html

///////////////////////////////////theme 1
$candy-app-primary: mat-palette($mat-gray, 300);
$candy-app-accent: mat-palette($mat-red, A200, A100, A400);
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme(
  $candy-app-primary,
  $candy-app-accent,
  $candy-app-warn
);
///////////////////////////////////theme 1
$my-app-primary: mat-palette($mat-purple, A700);
$my-app-accent: mat-palette($mat-pink, 500, A100, A400);
$my-app-warn: mat-palette($mat-red);

$my-app-theme: mat-light-theme(
  $my-app-primary,
  $my-app-accent,
  $my-app-warn
);
///////////////////////////////////variables
$primary: mat-color($my-app-primary);
$accent: mat-color($my-app-accent);
$warn: mat-color($my-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include angular-material-theme($candy-app-theme);
@include angular-material-theme($my-app-theme);

